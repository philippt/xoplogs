<% log_type = params[:type] || 'access' %>
<h2>aggregated <%= log_type %> logs <%= ": #{(params[:hosts] ? params[:hosts].join(',') : '')}" %></h2>

<% if params[:debug] %>
<table>
	<thead>
		<tr>
			<th>timestamp</th>
			<th>success</th>
			<th>error</th>
			<th>response time</th>
		</tr>
	</thead>
	<tbody>
		<% @buckets.each do |bucket| %>
		  <% ts, record = bucket.first, bucket.last %>
		  <tr>
		  	<td><%= Time.at(ts/1000) %></td>
		  	<td><%= record.success_count %></td>
		  	<td><%= record.failure_count %></td>
		  	<td><%= record.response_time_micros_avg %></td>
		  </tr>
		<% end %>
	</tbody>>
</table>	
<% end %>

<%= render(:partial => "grapharea") %>


<script id="source" language="javascript" type="text/javascript">

  function fetch_data() {
    <% if log_type == 'access' %>
  	addLine("graph_request_count", 'count_errors', '/aggregated/graph_request_count_errors?<%= @current_filters %>', function(series) {
	    series.color = 2;
	    series.points.show = false;
	    series.label = "failed requests";
	  });
	  addLine("graph_request_count", 'count_success', '/aggregated/graph_request_count_success?<%= @current_filters %>', function(series) {
	    series.color = 0;
	    series.points.show = false;
	    series.label = "successful requests";
	  });
	
	  addLine("graph_response_time", 'count_success', '/aggregated/graph_response_time?<%= @current_filters %>', function(series) {
	    series.color = 1;
	    series.points.show = false;
	    series.label = "response time (in ms)"
	  });
	  <% elsif log_type == 'server_log' %>
	  addLine("graph_server_log", 'info_count', '/aggregated/graph_server_log?level=info&<%= @current_filters.html_safe %>', function(series) {
      series.color = 0;
      series.points.show = true;
      series.label = "info count"
    });
    addLine("graph_server_log", 'error_count', '/aggregated/graph_server_log?level=error&<%= @current_filters.html_safe %>', function(series) {
      series.color = 2;
      series.points.show = false;
      series.label = "error count"
    });
	  <% end %>        
  }
  
  function start_update() {
  	setInterval(fetch_data, 5000);
  }
  
  fetch_data();  
  
</script>

<br/>
<input type="button" value="auto update" onClick="JavaScript:start_update();"/>


<% if params[:hosts] != nil %>
  <hr/>
  <a href="/aggregated?">back to overview</a>
<% end %>
<!--
<input type="button" value="no errors" onClick="JavaScript:removeLine('graph_request_count', 'count_errors');"/>
-->
